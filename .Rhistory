data_1921$EDAD[is.na(data_1921$EDAD)] = "DESCONOCIDA"
data_1921 <- data_1921 %>% filter(FECHA >= "2015-01-01")
#merge de las bases de datos
all_data <- merge(data_1519, data_1921, all = TRUE)
all_data$ID <- seq.int(nrow(all_data))
all_data <- all_data[,c("ID", names(all_data)[names(all_data) != "ID"])]
all_data[['FECHA']] <- strptime(all_data[['FECHA']], format = "%Y-%m-%d")
unique(all_data$EDAD)
unique(all_data$SEXO)
unique(all_data$FECHA)
all_data$CAUSA1[is.na(all_data$CAUSA1)] = "DESCONOCIDA"
all_data$CAUSA1[all_data$CAUSA1=='"Ignorado'] = "DESCONOCIDA"
all_data$CAUSA1[all_data$CAUSA1=='"Ignorado"'] = "DESCONOCIDA"
all_data$CAUSA1[all_data$CAUSA1=='"ignorado"'] = "DESCONOCIDA"
all_data$CAUSA1<- str_replace_all(all_data$CAUSA1, "^-", "DESCONOCIDA")
all_data$CAUSA1<- str_replace_all(all_data$CAUSA1, "^\\s", "DESCONOCIDA")
all_data$CAUSA2[is.na(all_data$CAUSA2)] = "DESCONOCIDA"
all_data$CAUSA3[is.na(all_data$CAUSA3)] = "DESCONOCIDA"
all_data$CAUSA4[is.na(all_data$CAUSA4)] = "DESCONOCIDA"
all_data$EDAD[is.na(all_data$EDAD)] = "DESCONOCIDA"
#all_data$CAUSA2<- str_replace_all(all_data$CAUSA2, "^-", "DESCONOCIDA")
#all_data$CAUSA3<- str_replace_all(all_data$CAUSA3, "^-", "DESCONOCIDA")
#all_data$CAUSA4<- str_replace_all(all_data$CAUSA4, "^-", "DESCONOCIDA")
all_data
write.csv(all_data,"all_data.csv", row.names = FALSE)
View(all_data)
library(ggplot2)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
###################Grafica muertes por grupo etario y sexo ###################
#Colocando una columna adicional clasifique los registros en grupo etario
grupos_etarios <- all_data %>%
mutate(grupo_edad = case_when(
between(EDAD,0,9) ~ "0-9",
between(EDAD,10,19) ~ "10-19",
between(EDAD,20,29) ~ "20-29",
between(EDAD,30,39) ~ "30-39",
between(EDAD,40,49) ~ "40-49",
between(EDAD,50,59) ~ "50-59",
between(EDAD,60,69) ~ "60-69",
between(EDAD,70,79) ~ "70-79",
between(EDAD,80,89) ~ "80-89",
between(EDAD,90,99) ~ "90-99",
between(EDAD,100,109) ~ "100-109",
between(EDAD,110,119) ~ "110-119",
between(EDAD,120,150) ~ "120+",
EDAD == "DESCONOCIDA" ~ "DESCONOCIDA"
))
grupos_etarios$n <- 1
grupos_etarios <- grupos_etarios %>% group_by(grupo_edad, SEXO) %>% summarise(n=sum(n))
grupos_etarios$grupo_edad <- factor(grupos_etarios$grupo_edad, levels =
c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69",
"70-79", "80-89", "90-99", "100-109", "110-119", "120+", "DESCONOCIDA"))
library(ggplot2)
library(plyr)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
###################Grafica muertes por grupo etario y sexo ###################
#Colocando una columna adicional clasifique los registros en grupo etario
grupos_etarios <- all_data %>%
mutate(grupo_edad = case_when(
between(EDAD,0,9) ~ "0-9",
between(EDAD,10,19) ~ "10-19",
between(EDAD,20,29) ~ "20-29",
between(EDAD,30,39) ~ "30-39",
between(EDAD,40,49) ~ "40-49",
between(EDAD,50,59) ~ "50-59",
between(EDAD,60,69) ~ "60-69",
between(EDAD,70,79) ~ "70-79",
between(EDAD,80,89) ~ "80-89",
between(EDAD,90,99) ~ "90-99",
between(EDAD,100,109) ~ "100-109",
between(EDAD,110,119) ~ "110-119",
between(EDAD,120,150) ~ "120+",
EDAD == "DESCONOCIDA" ~ "DESCONOCIDA"
))
grupos_etarios$n <- 1
grupos_etarios <- grupos_etarios %>% group_by(grupo_edad, SEXO) %>% summarise(n=sum(n))
grupos_etarios$grupo_edad <- factor(grupos_etarios$grupo_edad, levels =
c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69",
"70-79", "80-89", "90-99", "100-109", "110-119", "120+", "DESCONOCIDA"))
library(ggplot2)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
###################Grafica muertes por grupo etario y sexo ###################
#Colocando una columna adicional clasifique los registros en grupo etario
grupos_etarios <- all_data %>%
mutate(grupo_edad = case_when(
between(EDAD,0,9) ~ "0-9",
between(EDAD,10,19) ~ "10-19",
between(EDAD,20,29) ~ "20-29",
between(EDAD,30,39) ~ "30-39",
between(EDAD,40,49) ~ "40-49",
between(EDAD,50,59) ~ "50-59",
between(EDAD,60,69) ~ "60-69",
between(EDAD,70,79) ~ "70-79",
between(EDAD,80,89) ~ "80-89",
between(EDAD,90,99) ~ "90-99",
between(EDAD,100,109) ~ "100-109",
between(EDAD,110,119) ~ "110-119",
between(EDAD,120,150) ~ "120+",
EDAD == "DESCONOCIDA" ~ "DESCONOCIDA"
))
grupos_etarios$n <- 1
grupos_etarios <- grupos_etarios %>% group_by(grupo_edad, SEXO) %>% summarise(n=sum(n))
grupos_etarios$grupo_edad <- factor(grupos_etarios$grupo_edad, levels =
c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69",
"70-79", "80-89", "90-99", "100-109", "110-119", "120+", "DESCONOCIDA"))
mujeres <- grupos_etarios%>% filter(SEXO=="F")
hombres <- grupos_etarios%>% filter(SEXO=="M")
mujeres$n
fig <- plot_ly(grupos_etarios, x = ~grupo_edad, y= ~n, type = 'bar', name = "TOTAL")%>%
add_trace(mujeres,x = mujeres$grupo_edad, y = mujeres$n,  name = "femenino", color = "#EB5160") %>%
add_trace(hombres,x = hombres$grupo_edad, y = hombres$n, name = "masculino", color = "#16a085") %>%
layout(xaxis = list(title = 'Grupos etarios'),
yaxis = list(title = 'Cantidad de muertes'),
barmode = 'group',
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
muertes_fecha <- all_data %>% count(FECHA)
muertes_fecha$FECHA
muertes_fecha$n
fig <- plot_ly(muertes_fecha, x = ~FECHA, y = ~n, type = 'scatter', mode = 'lines')
fig
unique(all_data$CAUSA1)
causas <- all_data
causas$n <- 1
causas <- causas %>% group_by(CAUSA1) %>% summarise(n=sum(n))
causas<- head(arrange(causas,desc(n)), n = 10)
causas
fig <- plot_ly(causas, x = ~n, y = ~CAUSA1, type = 'bar', orientation = 'h')
fig
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- aggregate(all_data, by=list(all_data$FECHA, all_data$CAUSA1), FUN=length);
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% summarise(n=sum(n))
View(causas_fecha)
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
View(causas_fecha)
causas_fecha <- head(causas_fecha,10)
View(causas_fecha)
View(causas)
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- causas_fecha %>% filter(causas_fecha$CAUSA1 == causas$CAUSA1)
causas_fecha <- causas_fecha %>% filter(causas_fecha$CAUSA1 in causas$CAUSA1)
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
View(causas_fecha)
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1)
fig <- fig %>% add_lines()
fig
fig <- fig %>% add_lines()
fig
############
dens <- with(diamonds, tapply(price, INDEX = cut, density))
df <- data.frame(
x = unlist(lapply(dens, "[[", "x")),
y = unlist(lapply(dens, "[[", "y")),
cut = rep(names(dens), each = length(dens[[1]]$x))
)
fig <- plot_ly(df, x = ~x, y = ~y, color = ~cut)
fig <- fig %>% add_lines()
fig
causas<- head(arrange(causas,desc(n)), n = 5)
causas
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1)
fig <- fig %>% add_lines()
fig
fig <- plot_ly(causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1)
fig <- fig %>% add_lines()
fig
causas<- head(arrange(causas,desc(n)), n = 10)
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
fig <- plot_ly(causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1)
fig <- fig %>% add_lines()
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
causas_fecha <- causas_fecha %>% filter(FECHA>'2021-01-01')
fig <- plot_ly(causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1)
fig <- fig %>% add_lines()
fig
fig <- plot_ly(causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1, type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
fig <- plot_ly(causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1,
type = 'scatter', mode = 'lines', line = list(width = 4))
fig <- fig %>% add_lines()
fig
fig <- plot_ly(data=causas_fecha, x = causas_fecha$FECHA, y = causas_fecha$n, color = causas_fecha$CAUSA1,
type = 'scatter', mode = 'lines', line = list(width = 4))
fig <- fig %>% add_lines()
fig
fig <- plot_ly(data=causas_fecha, x = ~FECHA, y = ~n, color = CAUSA1,
type = 'scatter', mode = 'lines')
fig <- plot_ly(data=causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
library(ggplot2)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
###################Grafica muertes por grupo etario y sexo ###################
#Colocando una columna adicional clasifique los registros en grupo etario
grupos_etarios <- all_data %>%
mutate(grupo_edad = case_when(
between(EDAD,0,9) ~ "0-9",
between(EDAD,10,19) ~ "10-19",
between(EDAD,20,29) ~ "20-29",
between(EDAD,30,39) ~ "30-39",
between(EDAD,40,49) ~ "40-49",
between(EDAD,50,59) ~ "50-59",
between(EDAD,60,69) ~ "60-69",
between(EDAD,70,79) ~ "70-79",
between(EDAD,80,89) ~ "80-89",
between(EDAD,90,99) ~ "90-99",
between(EDAD,100,109) ~ "100-109",
between(EDAD,110,119) ~ "110-119",
between(EDAD,120,150) ~ "120+",
EDAD == "DESCONOCIDA" ~ "DESCONOCIDA"
))
grupos_etarios$n <- 1
grupos_etarios <- grupos_etarios %>% group_by(grupo_edad, SEXO) %>% summarise(n=sum(n))
grupos_etarios$grupo_edad <- factor(grupos_etarios$grupo_edad, levels =
c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69",
"70-79", "80-89", "90-99", "100-109", "110-119", "120+", "DESCONOCIDA"))
mujeres <- grupos_etarios%>% filter(SEXO=="F")
hombres <- grupos_etarios%>% filter(SEXO=="M")
mujeres$n
fig <- plot_ly(grupos_etarios, x = ~grupo_edad, y= ~n, type = 'bar', name = "TOTAL")%>%
add_trace(mujeres,x = mujeres$grupo_edad, y = mujeres$n,  name = "femenino", color = "#EB5160") %>%
add_trace(hombres,x = hombres$grupo_edad, y = hombres$n, name = "masculino", color = "#16a085") %>%
layout(xaxis = list(title = 'Grupos etarios'),
yaxis = list(title = 'Cantidad de muertes'),
barmode = 'group',
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
#####################Grafica de muertes por fecha#############################
muertes_fecha <- all_data %>% count(FECHA)
muertes_fecha$FECHA
muertes_fecha$n
fig <- plot_ly(muertes_fecha, x = ~FECHA, y = ~n, type = 'scatter', mode = 'lines')
fig
#####################Grafica de causas#######################################
unique(all_data$CAUSA1)
causas <- all_data
causas$n <- 1
causas <- causas %>% group_by(CAUSA1) %>% summarise(n=sum(n))
causas<- head(arrange(causas,desc(n)), n = 10)
causas
fig <- plot_ly(causas, x = ~n, y = ~CAUSA1, type = 'bar', orientation = 'h')
fig
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
causas_fecha <- causas_fecha %>% filter(FECHA>'2021-01-01')
fig <- plot_ly(data=causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
############
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig
causas_fecha <- causas_fecha %>% filter(FECHA>'2021-05-01')
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig
library(ggplot2)
############
causas_fecha %>%
ggplot( aes(x=FECHA, y=n, group=CAUSA1, color=CAUSA1)) +
geom_line()
############
causas_fecha %>%
ggplot( aes(x=FECHA, y=n, group=CAUSA1, color=CAUSA1)) +
geom_line() +
scale_color_viridis(discrete = TRUE)
############
causas_fecha %>%
ggplot( aes(x=FECHA, y=n, group=CAUSA1, color=CAUSA1)) +
geom_line() +
scale_color_viridis(discrete = TRUE)
install.packages("viridis")
############
causas_fecha %>%
ggplot( aes(x=FECHA, y=n, group=CAUSA1, color=CAUSA1)) +
geom_line() +
scale_color_viridis(discrete = TRUE)
library(viridis)
############
causas_fecha %>%
ggplot( aes(x=FECHA, y=n, group=CAUSA1, color=CAUSA1)) +
geom_line() +
scale_color_viridis(discrete = TRUE)
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
############
g1 = ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
g1
############
g1 = ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
g1
############
g1 <- ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
g1
############
g1 %>% ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
g1
############
causas_fecha %>% ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
############
causas_fecha %>% ggplot(causas_fecha, aes(x = FECHA, y = n, colour = CAUSA1)) + geom_line() + geom_point(size = 1, alpha = 0.8) +
# geom_bar(position="stack", stat="identity") +
ylab("New cases (weekly)") + xlab("Date") + theme_bw() +
scale_y_continuous(labels = function(l) {trans = l / 1000000; paste0(trans, "M")}) +
causas_fecha
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
causas_fecha <- causas_fecha %>% filter(FECHA>'2021-05-01')
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
install.packages("rjson"))
install.packages("rjson")
install.packages("rjson")
library(ggplot2)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
library(viridis)
library(rjson)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
###################Grafica muertes por grupo etario y sexo ###################
#Colocando una columna adicional clasifique los registros en grupo etario
grupos_etarios <- all_data %>%
mutate(grupo_edad = case_when(
between(EDAD,0,9) ~ "0-9",
between(EDAD,10,19) ~ "10-19",
between(EDAD,20,29) ~ "20-29",
between(EDAD,30,39) ~ "30-39",
between(EDAD,40,49) ~ "40-49",
between(EDAD,50,59) ~ "50-59",
between(EDAD,60,69) ~ "60-69",
between(EDAD,70,79) ~ "70-79",
between(EDAD,80,89) ~ "80-89",
between(EDAD,90,99) ~ "90-99",
between(EDAD,100,109) ~ "100-109",
between(EDAD,110,119) ~ "110-119",
between(EDAD,120,150) ~ "120+",
EDAD == "DESCONOCIDA" ~ "DESCONOCIDA"
))
grupos_etarios$n <- 1
grupos_etarios <- grupos_etarios %>% group_by(grupo_edad, SEXO) %>% summarise(n=sum(n))
grupos_etarios$grupo_edad <- factor(grupos_etarios$grupo_edad, levels =
c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69",
"70-79", "80-89", "90-99", "100-109", "110-119", "120+", "DESCONOCIDA"))
mujeres <- grupos_etarios%>% filter(SEXO=="F")
hombres <- grupos_etarios%>% filter(SEXO=="M")
mujeres$n
fig <- plot_ly(grupos_etarios, x = ~grupo_edad, y= ~n, type = 'bar', name = "TOTAL")%>%
add_trace(mujeres,x = mujeres$grupo_edad, y = mujeres$n,  name = "femenino", color = "#EB5160") %>%
add_trace(hombres,x = hombres$grupo_edad, y = hombres$n, name = "masculino", color = "#16a085") %>%
layout(xaxis = list(title = 'Grupos etarios'),
yaxis = list(title = 'Cantidad de muertes'),
barmode = 'group',
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
muertes_fecha <- all_data %>% count(FECHA)
muertes_fecha$FECHA
muertes_fecha$n
fig <- plot_ly(muertes_fecha, x = ~FECHA, y = ~n, type = 'scatter', mode = 'lines')
fig
unique(all_data$CAUSA1)
causas <- all_data
causas$n <- 1
causas <- causas %>% group_by(CAUSA1) %>% summarise(n=sum(n))
causas<- head(arrange(causas,desc(n)), n = 10)
causas
fig <- plot_ly(causas, x = ~n, y = ~CAUSA1, type = 'bar', orientation = 'h')
fig
#############################################################################
causas_fecha <- all_data
causas_fecha$n <- 1
causas_fecha <- causas_fecha %>% group_by(FECHA, CAUSA1) %>%summarise(n=sum(n))
causas_fecha <- subset(causas_fecha, CAUSA1 %in% causas$CAUSA1)
causas_fecha <- causas_fecha %>% filter(FECHA>'2021-05-01')
fig <- plot_ly(causas_fecha, x = ~FECHA, y = ~n, color = ~CAUSA1,
type = 'scatter', mode = 'lines')
fig <- fig %>% add_lines()
fig
############
############
departamentos <- rjson::fromJSON(file='departamentos_gtm.geojson')
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",
geojson=departamentos,
locations=all_data$DEPARTAMENTO,
colorscale="Viridis",
marker=list(line=list(
width=0)
)
)
fig
departamentos
departamentos$features
departamentos$features[[1]]
departamentos$name
departamentos$name[2]
departamentos$name[1]
departamentos$features$name
