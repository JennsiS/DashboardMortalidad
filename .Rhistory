# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(zoom = 12)
m
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 12)
m
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 7)
m
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 5)
m
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 6)
m
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 7)
m
#bins <- c(0, 1000, 5000, 10000, 50000, 1000000 , 150000, Inf)
pal <- colorNumeric( colorRampPalette(brewer.pal(9,"Blacks"))(5),
domain = c(0,max(newdf$n)))
#bins <- c(0, 1000, 5000, 10000, 50000, 1000000 , 150000, Inf)
pal <- colorNumeric( colorRampPalette(brewer.pal(9,"Grays"))(5),
domain = c(0,max(newdf$n)))
#bins <- c(0, 1000, 5000, 10000, 50000, 1000000 , 150000, Inf)
pal <- colorNumeric( colorRampPalette(brewer.pal(9,"Blues"))(5),
domain = c(0,max(newdf$n)))
m <-leaflet(newdf) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 7)
m
install.packages("lubridate")
library(lubridate)
##importacion de la base de datos
library("readxl")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
CES2021<-read_excel("C:/Users/bff_n/Documents/GitHub/Dashboard-Mortalidad/baseCES2021_renap.xlsx")
b1519<-read_excel( "C:/Users/bff_n/Documents/GitHub/Dashboard-Mortalidad/b1519_renap.xlsx")
##importacion de paquetes
library(tidyverse)
library(dplyr)
library(lubridate)
##tibbles
CES2021_t<-tibble(CES2021)
b1519_t<-tibble(b1519)
View(b1519_t)
View(CES2021)
PreMort2 <-b1519_t %>%
select(FECHA, EDAD, SEXO, DEPARTAMENTO, CAUSA1, CAUSA2, CAUSA3, CAUSA4)
PreMort1<-CES2021_t %>%
select(FECHA, EDAD, GENERO, DEPARTAMENTOD, CAUSA.1, CAUSA.2, CAUSA.3, CAUSA.4) %>%
rename("SEXO"="GENERO") %>%
rename("DEPARTAMENTO"="DEPARTAMENTOD") %>%
rename("CAUSA1"="CAUSA.1") %>%
rename("CAUSA2"="CAUSA.2") %>%
rename("CAUSA3"="CAUSA.3") %>%
rename("CAUSA4"="CAUSA.4")
PreMort1<-CES2021_t %>%
select(FECHA, EDAD, GENERO, DEPARTAMENTOD, CAUSA.1, CAUSA.2, CAUSA.3, CAUSA.4) %>%
rename("SEXO"="GENERO") %>%
rename("DEPARTAMENTO"="DEPARTAMENTOD") %>%
rename("CAUSA1"="CAUSA 1") %>%
rename("CAUSA2"="CAUSA 2") %>%
rename("CAUSA3"="CAUSA 3") %>%
rename("CAUSA4"="CAUSA 4")
muertes_departamentos <- all_data
muertes_departamentos$n <- 1
muertes_departamentos <- muertes_departamentos %>% group_by(DEPARTAMENTO) %>% summarise(n=sum(n))
muertes_departamentos$DEPARTAMENTO[muertes_departamentos$DEPARTAMENTO == "SOLOL√Å"] ="SOLOLA"
muertes_fecha <- all_data %>% count(FECHA)
View(muertes_fecha)
muertes_fecha$epiW <- epiweek(FECHA)
muertes_fecha$epiW <- epiweek(muertes_fecha$FECHA)
View(muertes_fecha)
anios <- format(muertes_fecha$FECHA, format="%Y")
view(anios)
muertes_fecha$FECHA <- format(muertes_fecha$FECHA, format="%m/%d/%Y")
anios <- format(muertes_fecha$FECHA, format="%Y")
anios
typeof(muertes_fecha$FECHA)
year(muertes_fecha$FECHA)
muertes_fecha$anios <- year(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha <- all_data %>% count(FECHA)
muertes_fecha$epiW <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha <- all_data %>% count(FECHA)
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
library(stringr)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha <- all_data %>% count(fullDate)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha <- muertes_fecha %>% count(fullDate)
muertes_fecha <- muertes_fecha$fullDate %>% arrange(year, month)
muertes_fecha$fullDate <-  as.Date(muertes_fecha$fullDate)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- muertes_fecha %>% count(fullDate)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$epiWeek <- if (muertes_fecha$epiWeek<10) {str_c("0","",muertes_fecha$epiWeek)}
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$epiWeek[muertes_fecha$epiWeek < "10"] = str_c("0","",muertes_fecha$epiWeek)
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10] = str_c("0","",muertes_fecha$epiWeek)
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10] = str_c("0",muertes_fecha$epiWeek)
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10] = str_c("0",muertes_fecha$epiWeek)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10] = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$epiWeek[muertes_fecha$epiWeek < "10"]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
#muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate,year,epiWeek) %>% summarise(n=sum(n))
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
#muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate,year,epiWeek) %>% summarise(n=sum(n))
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
#muertes_fecha$epiWeek[muertes_fecha$epiWeek < 10]# = str_pad(muertes_fecha$epiWeek, 1, pad = "0")
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate,year,epiWeek) %>% summarise(n=sum(n))
#muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = muertes_fecha$fullDate, y = muertes_fecha$n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = muertes_fecha$fullDate, y = muertes_fecha$n, type = 'scatter', mode = 'line', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = muertes_fecha$fullDate, y = muertes_fecha$n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- muertes_fecha[order(muertes_fecha$year),]
fig <- plot_ly(muertes_fecha, x = muertes_fecha$fullDate, y = muertes_fecha$n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = muertes_fecha$fullDate, y = muertes_fecha$n, type = 'scatter', mode = 'line', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = ~year, y = muertes_fecha$n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = ~year, y = muertes_fecha$n, type = 'scatter', mode = 'line', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = ~year, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
#muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
#muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate,year,epiWeek) %>% summarise(n=sum(n))
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
-
-
muertes_fecha <- all_data
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>%filter(n=sum(n))
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>%filter(n==sum(n))
muertes_fecha <- muertes_fecha %>% arrange(muertes_fecha$year, muertes_fecha$epiWeek)
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- all_data
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6')
fig <- config(fig, displaylogo = FALSE)
fig
muertes_fecha <- all_data
#obteniendo las semanas epidemiologicas
muertes_fecha$epiWeek <- epiweek(muertes_fecha$FECHA)
muertes_fecha$year <- year(muertes_fecha$FECHA)
muertes_fecha$fullDate <- str_c(muertes_fecha$year,"-",muertes_fecha$epiWeek)
muertes_fecha$n <- 1
muertes_fecha <- muertes_fecha %>% group_by(fullDate) %>% summarise(n=sum(n))
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6') %>%
config(displaylogo = FALSE) %>%
layout(xaxis="Semana epidemiol√≥gica",
yaxis="Cantidad de muertes")
fig
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6') %>%
config(displaylogo = FALSE) %>%
layout(xaxis="Semana epidemiol√≥gica",
yaxis="Cantidad de muertes")
fig
fig <- plot_ly(muertes_fecha, x = ~fullDate, y = ~n, type = 'scatter', mode = 'lines', colors ='#00A6A6') %>%
config(displaylogo = FALSE) %>%
layout(xaxis= list(title = "Semana epidemiol√≥gica"),
yaxis= list(title = "Cantidad de muertes"))
fig
View(newdf)
muertes_departamentos <- all_data
muertes_departamentos$n <- 1
muertes_departamentos <- muertes_departamentos %>% group_by(DEPARTAMENTO) %>% summarise(n=sum(n))
muertes_departamentos$DEPARTAMENTO[muertes_departamentos$DEPARTAMENTO == "SOLOL√Å"] ="SOLOLA"
departamentos_locacion <- st_read("departamentos_gtm",layer="departamentos_gtm")
departamentos_locacion  <- st_transform(departamentos_locacion, "+proj=longlat +datum=WGS84")
departamentos_locacion$nombre <- as.character(departamentos_locacion$nombre)
names (muertes_departamentos)[1] = "nombre"
library(ggplot2)
library(dplyr)
library(maps)
library(plotly)
library(hrbrthemes)
library(rjson)
library(viridis)
library(rgdal)
library(leaflet)
library(sf)
library(RColorBrewer)
library(lubridate)
library(stringr)
Colocar el directorio de trabajo
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
#Cargar el archivo donde se encuentran los datos unificados
all_data <- read.csv(file = 'all_data.csv')
Sys.setlocale(locale = "es_ES.UTF-8")
muertes_departamentos <- all_data
muertes_departamentos$n <- 1
muertes_departamentos <- muertes_departamentos %>% group_by(DEPARTAMENTO) %>% summarise(n=sum(n))
muertes_departamentos$DEPARTAMENTO[muertes_departamentos$DEPARTAMENTO == "SOLOL√Å"] ="SOLOLA"
departamentos_locacion <- st_read("departamentos_gtm",layer="departamentos_gtm")
departamentos_locacion  <- st_transform(departamentos_locacion, "+proj=longlat +datum=WGS84")
departamentos_locacion$nombre <- as.character(departamentos_locacion$nombre)
names (muertes_departamentos)[1] = "nombre"
mortalidad_dep<- merge(muertes_departamentos, departamentos_locacion, by = "nombre")
mortalidad_dep$nombre <- as.character(mortalidad_dep$nombre)
mortalidad_dep <- st_as_sf(mortalidad_dep)
pal <- colorNumeric( colorRampPalette(brewer.pal(9,"Reds"))(5),
domain = c(0,max(newdf$n)))
m <-leaflet(mortalidad_dep) %>%
setView(-94, 39, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(n),
weight = 1,
opacity = 1,
color = "white", #linea contorno
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
#label = labels,
# labelOptions = labelOptions(
#   style = list("font-weight" = "normal", padding = "3px 8px"),
#   textsize = "15px",
#   direction = "auto")
) %>%
addLegend(pal = pal, values = ~n, opacity = 0.7, title = NULL,# titulo leyenda
position = "bottomright", group = "Departamentos")%>%
setView(lat=14.628434,lng=-90.522713, zoom = 7)
m
shiny::runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
